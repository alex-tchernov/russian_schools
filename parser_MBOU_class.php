<?php
Class ParserMBOU {
	private $reg_names = [
		 'города Москвы'  
		,'города Севастополя'
		,'Санкт-Петербурга'
		,'города Мценска'
		,'Республики Мордовия'
		,'Республики Коми'
		,'Республики Башкортостан'
		,'Республики Татарстан'
		,'Республики Алтай'
		,'Республики Дагестан'
		,'Удмуртской Республики'
		,'Чувашской Республики'
		,'Еврейской Автономной Области'
		,'Ханты-Мансийского автономного Округа Югры'
		,'Ханты-Мансийского автономного Округа(\s?-\s?|)Югры'
		,'Ханты-Мансийского автономного округа – Югры'
		,'Республики Крым' 
		,'Ставропольского Края' 
		,'Пермского Края' 
		,'Краснодарского Края' 
		,'Амурской области'
		,'Архангельской области'
		,'Астраханской области'
		,'Белгородской области'
		,'Брянской области'
		,'Владимирской области'
		,'Волгоградской области'
		,'Вологодской области'
		,'Воронежской области'
		,'Запорожской области'
		,'Ивановской области'
		,'Иркутской области'
		,'Калининградской области'
		,'Калужской области'
		,'Кировской области'
		,'Костромской области'
		,'Курганской области'
		,'Курской области'
		,'Ленинградской области'
		,'Липецкая области'
		,'Магаданской области'
		,'Московской области'
		,'Мурманской области'
		,'Нижегородской области'
		,'Новгородской области'
		,'Новосибирской области'
		,'Омской области'
		,'Оренбургской области'
		,'Орловской области'
		,'Пензенской области'
		,'Псковской области'
		,'Ростовской области'
		,'Рязанской области'
		,'Самарской области'
		,'Саратовской области'
		,'Сахалинской области'
		,'Свердловской области'
		,'Смоленской области'
		,'Тамбовской области'
		,'Тверской области'
		,'Томской области'
		,'Тульской области'
		,'Тюменской области'
		,'Ульяновской области'
		,'Херсонской области'
		,'Челябинской области'
		,'Ярославской области'			
	];
		
	public function parse(string $my_name, ?array $addr = null) {
		$org_found = false;
		$saved_name = $my_name;
		$MBOU = '';
		$socr = [
			 'ГБПОУ РО'  //Почему не повезло Ростовской области??
			,'ГБПОУ'  // Этих пара штук
			,'ГАПОУ'  
			,'ГБОУ НПО РО'  
			,'ГБОУ СПО РО'
// ФРДО			
			,'ФГБОУ ВО' 
			,'ГКОУ РД' 
			,'АНО ВО' 
			,'БПОУ ВО' 
			,'СОГБПОУ' 
			,'ОГБПОУ' 
			,'ГПОУ' 
			,'ГОУ СПО СО' 
			,'СПО ЯО' 
			,'ГОУ СПО' 
			,'ГОУ' 
			,'БОУ ОО НПО' 
			,'АНПОО' 
			,'МБОУ' 
			,'МКОУ' 
			,'МОБУ' 
			,'МБОУ' 
			,'МОУ' 
			,'ГБОУ' 
			,'ГАПОУ' 
			
		];
		foreach($socr as $word) {
			if ( preg_match("/^$word\W/ui", $my_name) ) {
				$my_name = preg_replace("/^$word\W/ui", '', $my_name);
				$MBOU = $word;
				$org_found = true;
				break;
			}
		}
		
		$empty_words = [
			'-'
			,' ?– ?'
//			,'и' 
			,'Ордена трудового красного знамени'
			,'\(повышения квалификации\) специалистов'
			,'в области права и частной Охранной деятельности' // Правового просвящения
			,'Общего типа' 
//			,'Образования-ассоциация'	
//			,'Научно-Образовательное учреждение' // Иначе НОУ путается
			,'Открытого типа' // СУВ
			,'Закрытого типа' // 
			,'\(переподготовки и повышения квалификации\)' // 
			,'\(повышения квалификации\)' // 
		];
		
		// n - учреждение neuter средний род
		$n_regs = [
			 'Кировское областное'
			,'Смоленское областное'
			,'Тамбовское областное'
			,'Санкт-Петербургское'
			,'Магаданское областное'
			,'Коми республиканское' 
			,'Красноярское Краевое' 
		];

		// m - центрп  мужской род
		$m_regs = [

		];		
		// f - организация женский род
		$f_regs = [
			'Карачаево-Черкесская республиканская'
		];

		$all_regs = $this->reg_names;
		
		if ($addr) {
			if ($addr['area'] == 'Таймырский Долгано-Ненецкий р-н') {
				$n_regs[] = 'Таймырское муниципальное';
			} elseif ($addr['area'] == 'Нефтеюганский р-н') {
				$n_regs[] = 'Нефтеюганское районное муниципальное';	
			} elseif ($addr['region'] == 'Сахалинская обл') {
				$n_regs[] = 'Сахалинское';
			} elseif ($addr['area'] == 'Шабалинский р-н') {
				$n_regs[] = 'Шабалинское муниципальное';
			} elseif ( isset($addr['kladr']) && preg_match('/^66000003|^66002000008/',$addr['kladr']) ) {
				// г Березовский или р-н
				$n_regs[] = 'Березовское муниципальное';
			} elseif ( $addr['city'] == 'г Лангепас' ) {
				$n_regs[] = 'Лангепасское Городское';
			} elseif ( $addr['city'] == 'г Первоуральск' ) {
				$n_regs[] = 'Первоуральское муниципальное';
			} elseif ( $addr['city'] == 'г Верещагино' ) {
				$n_regs[] = 'Верещагинское муниципальное';
			}
		}
		// слова для учреждений 
		$n_words = [
			 'краевое'	
			,'областное'
			,'\(областное\)'
			,'государственное'
			,'аккредитованное'
			,'негосударственное\s\(частное\)' // написал слитно чтобы заменить на одну букву н
			,'федеральное'
			,'республиканское'
			,'негосударственное'
			,'некоммерческое'
			,'частное'
			,'\(частное\)'
			,'\(частное учреждение\)'
			,'нетиповое'
			,'автономное'
			,'муниципальное'
			,'межгосударственное'
			,'общественное'
			
			,'профессиональное'
			,'профессиональное аварийно-спасательное формирование'
		
			,'религиозное'
			,'военное'		
			
			,'образовательное'			
			,'общеобразовательное'
			,'дошкольное' 

			,'оздоровительное'
			,'стационарное'
			,'реабилитационное'

			,'науки'
//			,'федеральный'
			
			,'бюджетное' 
			,'бюджетное ?общеобразовательное ?учреждение' // очепятка
			,'бюджетное ?профессиональное ?образовательное' // очепятка
//			,'учреждение ?профессионального' // очепятка
			,'автономное ?профессиональное ?образовательное' // очепятка
			,'казенное ?общеобразовательное ?учреждение' // очепятка
			,'бюджетное ?общеобразовательное' // очепятка
			,'казенное ?учреждение ?общеобразовательная ?организация' // очепятка
			,'общеобразовательное ?учреждение' // очепятка
			,'вечернее \(сменное\)'
			,'вечернее сменное'
			,'специальное \(коррекционное\)'
			,'специальное коррекционное'
			,'специальное'
			,'специализированное'
			,'общеобразовательное'
		//	,'специальное \(?коррекционное\)? образовательное'
			,'каз(е|ё)нное'
			
			,'муниципально бюджетное' 
			,'государственное' 
			
			
			,'религиозной организации'

			,'научное'
			,'научно-исследовательское и образовательное'
			,'научно-исследовательское'
			,'высшее'
			,'независимое'
			,'инновационное'
			,'учебно-воспитательное'
			,'природоохранное'
			,'медицинское'
			,'профессиональное'
			,'физкультурно-спортивное'
			,'санаторное'
			,'социальное'
			,'\(социальное\)'

			,'культурно-досуговое'
			,'комплексное'
			,'экспериментальное'

			,'и'
			
//			,'общество\sс ограниченной ответственностью' // до ооо
			,'учреждение высшего профессионального религиозного образования'
			,'учреждение социального обслуживания населения'
			,'учреждение социального обслуживания'
			,'учреждение здравоохранения'
			,'учреждение культуры и искусства'			
			,'учреждение культуры'			
			,'учреждение профсоюзов'
			,'учреждение науки'
			,'учреждение'
//			,'учреждения'
			,'\(среднее специальное учебное заведение\)'
			,'\(высшее учебное заведение\)'
			,'\(ОБЩЕСТВО С ОГРАНИЧЕННОЙ ОТВЕТСТВЕННОСТЬЮ\)'
			,'заведение'
			,'унитарное предприятие'
			,'предприятие'
			,'партнерство(?!\s(по|содействия)\b)'
//			,'научно-исследовательской деятельности'
		];
		
		// слова для организаий
		// f - female
		$f_words = [
			'Федеральная'
			,'Государственная'
			,'Некоммерческая'
			,'Негосударственная'
			,'Каз(е|ё)нная'
			,'Нетиповая'
			,'автономная'
			,'Областная'
			,'общественная'
			,'муниципальная'
			,'Духовная'
			,'Местная'
			,'Религиозная'
			,'Православная религиозная'
			,'Мусульманская религиозная'
			,'Профессиональная'
			,'Образовательная'
			,'Общеобразовательная' 
			,'Бюджетная'    
			,'дошкольная'    
			,'Частная'
			,'\(образовательная организация высшего образования\)'
			,'Организация культуры'
			,'Организация(?!\s(по|в)\s)'
		];
		
		$m_words = [
			'Международный центр компетенций'
			,'Межрегиональный центр компетенций'
		];
		
		$levels = [
			'высшего профессионального образования'
			,'высшего и профессионального образования'
			,'высшего образования и науки'
			,'высшего образования'
			,'высшего и дополнительного образования'
			,'высшего и послевузовского профессионального образования'
			,'дополнительного профессионального педагогического образования'
			,'дополнительного и профессионального образования'
			,'дополнительного образования детей'
			,'дополнительного и дополнительного профессионального образования'
			,'дополнительного образования и профессиональной подготовки'
			,'дополнительного профессионального образования и культуры'
			,'дополнительного профессионального образования и консалтинга'
			,'дополнительного профессионального образования и досуга молодежи'
			,'дополнительного профессионального образования и повышения квалификации'
			,'дополнительного профессионального образования и правового просвещения'
			,'дополнительного профессионального образования и повышения квалификации'
			,'дополнительного профессионального образования и развития квалификаций'
			,'дополнительного профессионального образования и профессиональной подготовки'
			,'дополнительного профессионального образования и профессиональной переподготовки'
			,'дополнительного профессионального образования'
			,'дополнительного образования'
			,'начального профессионального образования'
			,'начального общего образования '
			,'среднего профессионального образования'
			,'среднего и профессионального образования'
			,'среднего общего образования'
			,'среднего \(полного\) общего образования'  
			,'профессионального образования'
			,'профессиональной подготовки' // Дальше все к и к ДПО бывает ДПО и СПО
			,'и' // Дальше все к и к ДПО бывает ДПО и СПО
			,'Культуры и искусства' // СПО
			,'профессионального обучения'
			,'социальной поддержки населения'
			,'подготовки'
			,'общеобразовательной организации'
		];

		$found_region = false;
		$f_stop_regexp =  'организация';
		$n_stop_regexp = 'учреждение|предприятие|заведение|партнерство';
		$m_stop_regexp = 'центр';
		
		do {
			$my_name = trim($my_name);
			$n_found = $f_found = $found = false;
			
			// Учреждения
			if ($found_region) {
				$r = $this->mbou_part($my_name, $n_words, $n_stop_regexp);
			} else {
				$r = $this->mbou_part($my_name, $n_words, $n_stop_regexp, $n_regs, $all_regs);
			}
			if ($r['found']) {
				$org_found = $n_found= $found = true;
				$my_name = $r['my_name'];
				$MBOU .= ' '. $r['MBOU'];
				$found_region = $r['found_region'];
			}
			
			// Организации
			if ($found_region) {
				$r = $this->mbou_part($my_name, $f_words, $f_stop_regexp);
			} else {
				$r = $this->mbou_part($my_name, $f_words, $f_stop_regexp, $f_regs, $all_regs);
			}
			if ($r['found']) {
				$org_found = $f_found = $found = true;
				$my_name = $r['my_name'];
				$MBOU .=  ' '. $r['MBOU'];
				
				$found_region = $r['found_region'];
			}

			// Центры
			if ($found_region) {
				$r = $this->mbou_part($my_name, $m_words, $m_stop_regexp);
			} else {
				$r = $this->mbou_part($my_name, $m_words, $m_stop_regexp, $m_regs, $all_regs);
			}
			if ($r['found']) {
				$org_found = $f_found = $found = true;
				$my_name = $r['my_name'];
				$MBOU .=  ' '. $r['MBOU'];
				$found_region = $r['found_region'];
			}
			
			if ($found) {
				$r = $this->mbou_elements($my_name, $empty_words, '');
				if ($r['found']) {
					$my_name = $r['my_name'];
				}	
				$r = $this->mbou_elements($my_name, $levels, '');
				if ($r['found']) {
					$my_name = $r['my_name'];
					$MBOU .= ' '. $r['MBOU'];
				}
				
				$r = $this->mbou_elements($my_name, $empty_words, '');
				if ($r['found']) {
					$my_name = $r['my_name'];
				}
				
				if (!$found_region) {
					$r = $this->mbou_elements($my_name, $all_regs, '.');
					if ($r['found']) {
						$my_name = $r['my_name'];
						$MBOU .= ' '. $r['MBOU'];
						$found_region = true;
					}
				}
			}
		} while ($found); 
		
		if (!$org_found) {
			$my_name = $saved_name;
		}
		$MBOU = preg_replace('/\s+/u', ' ', $MBOU);
		if ($MBOU == 'У ВО') {
			$MBOU = 'УВО';
		} else if ($MBOU == 'МУ ДО') {
			$MBOU = 'МУДО';
		}
		return ['found'=>$org_found, 'MBOU'=>trim($MBOU), 'my_name'=>trim($my_name)];
	}
	
	// $reg_stop - regexp что пора остановиться

	protected function mbou_part(string $my_name, array $words, string $reg_stop=null, array $start_regions=[], array $other_regions = []) {
				// Учреждения
		$MBOU = '';
		$found_region = $found = false;

		$r = $this->mbou_elements($my_name, array_merge($start_regions,$other_regions), '.');
		if ($r['found']) {
			$my_name = $r['my_name'];
		//	$MBOU .= ' '. $r['MBOU'];
			$found_region = true;
		}
		
		$r = $this->mbou_elements($my_name, $words, $reg_stop);
		if ($r['found']) {
			$found = true;
			$my_name = $r['my_name'];
			$MBOU .= ' '. $r['MBOU'];
		}
		
		if (!$found_region) {
			$r = $this->mbou_elements($my_name, $other_regions, '.');
			if ($r['found']) {
				$my_name = $r['my_name'];
		//		$MBOU .= ' '. $r['MBOU'];
				$found_region = true;
			}
		}
		return ['found'=>$found, 'found_region'=>$found_region, 'MBOU'=>$MBOU, 'my_name'=>$my_name];
	}
	
	protected function mbou_elements(string $my_name, array $words, ?string $r_stop=null) {
		$found = false;
		$MBOU = '';
		do {
			$cont = false;
			foreach ($words as $word) {
				if ( preg_match("/^$word(\W|$)/ui", $my_name, $matches) ) {
					$cont = true;
					
					$my_name = preg_replace("/^$word(\W|$)/ui", '', $my_name);
					$MBOU .= $this->mbou_socr($word);
					if (!$r_stop) {
						$found = true;
					} else if ( preg_word_match($r_stop, $matches[0]) ) {
						//echo "r_stop\n";
						$found = true;
						$cont = false;
						break;
					} else {
						//echo "non r_stop {$matches[0]}\n";
					}
				}
			}
		} while ($cont);
		return ['found'=>$found, 'MBOU'=>$MBOU, 'my_name'=>$my_name];
	}
	
	protected function mbou_socr(string $word):string {
		$MBOU = '';
		$words = explode(' ', $word);
		$open_brackets = 0;
		foreach ($words as $w) {
			if ( preg_match('/Санкт-Петербургское/ui', $w) ) {
				$MBOU = 'СПб ';
			} else {
				$parts = explode('-',$w);
				foreach ($parts as $part) {
					$letter = mb_substr($part,0,1);
					if ($letter == '\\' || $letter == '?') {
						$part = mb_substr($part,1);
					}
					if (mb_substr($part,0,1) == '(') {
						$MBOU .= '(';
						$open_brackets++;
						$part = mb_substr($part,1);
					}
					$l = mb_substr($part,0,1);
					
					if (mb_strlen($part) == 1) {
						$l = mb_strtolower($l);
					} else {
						$l = mb_strtoupper($l);
					}
					$MBOU .= $l;
					if ($open_brackets && mb_substr($part,-1) == ')') {
						$MBOU .= ')';
						$open_brackets--;
					}
				}
			}
		}
		return $MBOU;
	}
}